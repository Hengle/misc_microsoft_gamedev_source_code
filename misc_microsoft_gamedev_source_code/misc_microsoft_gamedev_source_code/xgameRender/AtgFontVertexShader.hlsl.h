#if 0
//
// Generated by 2.0.7776.0
//
//   fxc /T vs_2_0 /E AtgFontVertexShader Atg.hlsl /Fh
//    AtgFontVertexShader.hlsl.h
//
//
// Parameters:
//
//   float4 Color;
//   float2 TexScale;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   Color        c1       1
//   TexScale     c2       1
//

// Shader type: vertex 

xvs_3_0
defconst Color, float, vector, [1, 4], c1
defconst TexScale, float, vector, [1, 2], c2
config AutoSerialize=false
config AutoResource=false
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, -0.5, 0, 0, 0


    exec
    vfetch r0.__xy, r0.x, position
    vfetch r0.xy__, r0.x, texcoord
    alloc position
    exec
    add oPos.xy01, r0.zw, c255.x
    alloc interpolators
    exece
    mul o0.xy, r0.xy, c2.xy
    mov o1, c1

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xvs_AtgFontVertexShader[] =
{
    0x102a1101, 0x0000011c, 0x000000ac, 0x00000000, 0x00000024, 0x000000b4, 
    0x000000dc, 0x00000000, 0x00000000, 0x0000008c, 0x0000001c, 0x0000007f, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x00000078, 0x00000044, 
    0x00020001, 0x00010000, 0x0000004c, 0x00000000, 0x0000005c, 0x00020002, 
    0x00010000, 0x00000068, 0x00000000, 0x436f6c6f, 0x7200abab, 0x00010003, 
    0x00010004, 0x00010000, 0x00000000, 0x54657853, 0x63616c65, 0x00ababab, 
    0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x76735f33, 0x5f300032, 
    0x2e302e37, 0x3737362e, 0x3000abab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x0000006c, 0x00110000, 0x00000000, 0x00000000, 
    0x00001842, 0x00000001, 0x00000002, 0x00000002, 0x00000290, 0x00100003, 
    0x00305004, 0x00003050, 0x0001f1a0, 0x00001006, 0x00001007, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xbf000000, 
    0x00000000, 0x00000000, 0x00000000, 0x30052003, 0x00001200, 0xc2000000, 
    0x00001005, 0x00001200, 0xc4000000, 0x00002006, 0x00002200, 0x00000000, 
    0x05f80000, 0x0000023f, 0x00000000, 0x05f80000, 0x00000fc8, 0x00000000, 
    0xc88bc03e, 0x001a6c00, 0xa000ff00, 0xc8038000, 0x00b0b000, 0xa1000200, 
    0xc80f8001, 0x00000000, 0x22010100, 0x00000000, 0x00000000, 0x00000000
};
