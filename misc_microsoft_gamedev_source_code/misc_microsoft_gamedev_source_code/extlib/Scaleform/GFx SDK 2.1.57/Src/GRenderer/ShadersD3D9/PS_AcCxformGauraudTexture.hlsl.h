#if 0
//
// Generated by 2.0.7776.0
//
//   fxc /T ps_1_1 /E PS_AcCxformGauraudTexture scaleform.hlsl /Fh
//    PS_AcCxformGauraudTexture.hlsl.h
//
//
// Parameters:
//
//   float4 cxadd;
//   float4 cxmul;
//   sampler2D tex0;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   cxmul        c2       1
//   cxadd        c3       1
//   tex0         s0       1
//

// Shader type: pixel 

xps_3_0
defconst cxadd, float, vector, [1, 4], c3
defconst cxmul, float, vector, [1, 4], c2
defconst tex0, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=2
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1
dcl_color1_centroid r2


    exec
    tfetch2D r0, r0.xy, tf0
    alloc colors
    exece
    add r0, r0.wxyz, -r1.wxyz
    mad r1, r0, r2.z, r1.wxyz
    mad r1, r1.yzwx, c2, c3
    mul r1.w, r1.w, r2.w
    mul r1.xyz, r1.w, r1.xyz
    mov oC0, r1

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xps_PS_AcCxformGauraudTexture[] =
{
    0x102a1100, 0x000000f4, 0x00000078, 0x00000000, 0x00000024, 0x00000000, 
    0x000000c8, 0x00000000, 0x00000000, 0x000000a0, 0x0000001c, 0x00000093, 
    0xffff0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008c, 0x00000058, 
    0x00020003, 0x00010000, 0x00000060, 0x00000000, 0x00000070, 0x00020002, 
    0x00010000, 0x00000060, 0x00000000, 0x00000076, 0x00030000, 0x00010000, 
    0x0000007c, 0x00000000, 0x63786164, 0x6400abab, 0x00010003, 0x00010004, 
    0x00010000, 0x00000000, 0x63786d75, 0x6c007465, 0x783000ab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e37, 
    0x3737362e, 0x3000abab, 0x00000000, 0x00000078, 0x10000200, 0x00000008, 
    0x00000000, 0x00002863, 0x00010007, 0x00000001, 0x00003050, 0x0000f1a0, 
    0x0000f2a1, 0x00011002, 0x00001200, 0xc4000000, 0x00006003, 0x00002200, 
    0x00000000, 0x10080001, 0x1f1ff688, 0x00004000, 0xc80f0100, 0x02ffff00, 
    0xe0000100, 0xc80f0101, 0x0000c6ff, 0xeb000201, 0xc80f0101, 0x00550000, 
    0x8b010203, 0xc8080101, 0x001b1b00, 0xe1010200, 0xc8070101, 0x001bc000, 
    0xe1010100, 0xc80f8000, 0x00000000, 0xe2010100, 0x00000000, 0x00000000, 
    0x00000000
};
