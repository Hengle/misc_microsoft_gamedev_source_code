// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.0
// Schema file: SoundBanksInfo.xsd
// Creation Date: 9/20/2007 3:50:30 PM
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace AK.Wwise.FilePackager.InfoFile
{

	public struct Declarations
	{
		public const string SchemaVersion = "";
	}

	[Serializable]
	public enum Platform
	{
		[XmlEnum(Name="PS3")] PS3,
		[XmlEnum(Name="Wii")] Wii,
		[XmlEnum(Name="Windows")] Windows,
		[XmlEnum(Name="XBox360")] XBox360
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class FileCollection : ArrayList
	{
		public File Add(File obj)
		{
			base.Add(obj);
			return obj;
		}

		public File Add()
		{
			return Add(new File());
		}

		public void Insert(int index, File obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(File obj)
		{
			base.Remove(obj);
		}

		new public File this[int index]
		{
			get { return (File) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ReferencedStreamedFilesFileCollection : ArrayList
	{
		public ReferencedStreamedFilesFile Add(ReferencedStreamedFilesFile obj)
		{
			base.Add(obj);
			return obj;
		}

		public ReferencedStreamedFilesFile Add()
		{
			return Add(new ReferencedStreamedFilesFile());
		}

		public void Insert(int index, ReferencedStreamedFilesFile obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(ReferencedStreamedFilesFile obj)
		{
			base.Remove(obj);
		}

		new public ReferencedStreamedFilesFile this[int index]
		{
			get { return (ReferencedStreamedFilesFile) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class SoundBankCollection : ArrayList
	{
		public SoundBank Add(SoundBank obj)
		{
			base.Add(obj);
			return obj;
		}

		public SoundBank Add()
		{
			return Add(new SoundBank());
		}

		public void Insert(int index, SoundBank obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(SoundBank obj)
		{
			base.Remove(obj);
		}

		new public SoundBank this[int index]
		{
			get { return (SoundBank) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlType(TypeName="FileDescriptorType"),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class FileDescriptorType
	{

		[XmlAttribute(AttributeName="Id",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __Id;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IdSpecified;
		
		[XmlIgnore]
		public uint Id
		{ 
			get { return __Id; }
			set { __Id = value; __IdSpecified = true; }
		}

		[XmlAttribute(AttributeName="Language",Form=XmlSchemaForm.Unqualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Language;
		
		[XmlIgnore]
		public string Language
		{ 
			get { return __Language; }
			set { __Language = value; }
		}

		[XmlElement(ElementName="ShortName",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ShortName;
		
		[XmlIgnore]
		public string ShortName
		{ 
			get { return __ShortName; }
			set { __ShortName = value; }
		}

		[XmlElement(ElementName="Path",IsNullable=true,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Path;
		
		[XmlIgnore]
		public string Path
		{ 
			get { return __Path; }
			set { __Path = value; }
		}

		public FileDescriptorType()
		{
		}
	}


	[XmlRoot(ElementName="SoundBanksInfo",IsNullable=false),Serializable]
	public class SoundBanksInfo
	{

		[XmlAttribute(AttributeName="Platform",Form=XmlSchemaForm.Unqualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Platform __Platform;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __PlatformSpecified;
		
		[XmlIgnore]
		public Platform Platform
		{ 
			get { return __Platform; }
			set { __Platform = value; __PlatformSpecified = true; }
		}

		[XmlAttribute(AttributeName="SchemaVersion",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __SchemaVersion;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __SchemaVersionSpecified;
		
		[XmlIgnore]
		public uint SchemaVersion
		{ 
			get { return __SchemaVersion; }
			set { __SchemaVersion = value; __SchemaVersionSpecified = true; }
		}

		[XmlElement(Type=typeof(StreamedFiles),ElementName="StreamedFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public StreamedFiles __StreamedFiles;
		
		[XmlIgnore]
		public StreamedFiles StreamedFiles
		{
			get
			{
				if (__StreamedFiles == null) __StreamedFiles = new StreamedFiles();		
				return __StreamedFiles;
			}
			set {__StreamedFiles = value;}
		}

		[XmlElement(Type=typeof(SoundBanks),ElementName="SoundBanks",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SoundBanks __SoundBanks;
		
		[XmlIgnore]
		public SoundBanks SoundBanks
		{
			get
			{
				if (__SoundBanks == null) __SoundBanks = new SoundBanks();		
				return __SoundBanks;
			}
			set {__SoundBanks = value;}
		}

		public SoundBanksInfo()
		{
		}
	}


	[XmlType(TypeName="StreamedFiles"),Serializable]
	public class StreamedFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public File Add(File obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public File this[int index]
		{
			get { return (File) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public File Remove(int index) 
		{ 
            File obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(File),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public FileCollection __FileCollection;
		
		[XmlIgnore]
		public FileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new FileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public StreamedFiles()
		{
		}
	}


	[XmlType(TypeName="File"),Serializable]
	public class File : AK.Wwise.FilePackager.InfoFile.FileDescriptorType
	{
		public File() : base()
		{
		}
	}


	[XmlType(TypeName="SoundBanks"),Serializable]
	public class SoundBanks
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return SoundBankCollection.GetEnumerator();
		}

		public SoundBank Add(SoundBank obj)
		{
			return SoundBankCollection.Add(obj);
		}

		[XmlIgnore]
		public SoundBank this[int index]
		{
			get { return (SoundBank) SoundBankCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return SoundBankCollection.Count; }
        }

        public void Clear()
		{
			SoundBankCollection.Clear();
        }

		public SoundBank Remove(int index) 
		{ 
            SoundBank obj = SoundBankCollection[index];
            SoundBankCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            SoundBankCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(SoundBank),ElementName="SoundBank",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SoundBankCollection __SoundBankCollection;
		
		[XmlIgnore]
		public SoundBankCollection SoundBankCollection
		{
			get
			{
				if (__SoundBankCollection == null) __SoundBankCollection = new SoundBankCollection();
				return __SoundBankCollection;
			}
			set {__SoundBankCollection = value;}
		}

		public SoundBanks()
		{
		}
	}


	[XmlType(TypeName="SoundBank"),Serializable]
	public class SoundBank : AK.Wwise.FilePackager.InfoFile.FileDescriptorType
	{

		[XmlElement(Type=typeof(ReferencedStreamedFiles),ElementName="ReferencedStreamedFiles",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReferencedStreamedFiles __ReferencedStreamedFiles;
		
		[XmlIgnore]
		public ReferencedStreamedFiles ReferencedStreamedFiles
		{
			get
			{
				if (__ReferencedStreamedFiles == null) __ReferencedStreamedFiles = new ReferencedStreamedFiles();		
				return __ReferencedStreamedFiles;
			}
			set {__ReferencedStreamedFiles = value;}
		}

		public SoundBank() : base()
		{
		}
	}


	[XmlType(TypeName="ReferencedStreamedFiles"),Serializable]
	public class ReferencedStreamedFiles
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return FileCollection.GetEnumerator();
		}

		public ReferencedStreamedFilesFile Add(ReferencedStreamedFilesFile obj)
		{
			return FileCollection.Add(obj);
		}

		[XmlIgnore]
		public ReferencedStreamedFilesFile this[int index]
		{
			get { return (ReferencedStreamedFilesFile) FileCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return FileCollection.Count; }
        }

        public void Clear()
		{
			FileCollection.Clear();
        }

		public ReferencedStreamedFilesFile Remove(int index) 
		{ 
            ReferencedStreamedFilesFile obj = FileCollection[index];
            FileCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            FileCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(ReferencedStreamedFilesFile),ElementName="File",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReferencedStreamedFilesFileCollection __FileCollection;
		
		[XmlIgnore]
		public ReferencedStreamedFilesFileCollection FileCollection
		{
			get
			{
				if (__FileCollection == null) __FileCollection = new ReferencedStreamedFilesFileCollection();
				return __FileCollection;
			}
			set {__FileCollection = value;}
		}

		public ReferencedStreamedFiles()
		{
		}
	}


	[XmlType(TypeName="ReferencedStreamedFilesFile"),Serializable]
	public class ReferencedStreamedFilesFile
	{

		[XmlAttribute(AttributeName="Id",Form=XmlSchemaForm.Unqualified,DataType="unsignedInt")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public uint __Id;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IdSpecified;
		
		[XmlIgnore]
		public uint Id
		{ 
			get { return __Id; }
			set { __Id = value; __IdSpecified = true; }
		}

		public ReferencedStreamedFilesFile()
		{
		}
	}
}
